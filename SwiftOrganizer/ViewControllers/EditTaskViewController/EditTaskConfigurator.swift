//
//  EditTaskConfigurator.swift
//  SwiftOrganizer
//
//  Created by Sergey Krotkih on 6/18/16.
//  Copyright (c) 2016 Sergey Krotkih. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension EditTaskInteractor: EditTaskViewControllerOutput
{
}

class EditTaskConfigurator
{
  // MARK: Object lifecycle
  
  class var sharedInstance: EditTaskConfigurator
  {
    struct Static {
      static var instance: EditTaskConfigurator?
      static var token: dispatch_once_t = 0
    }
    
    dispatch_once(&Static.token) {
      Static.instance = EditTaskConfigurator()
    }
    
    return Static.instance!
  }
  
  // MARK: Configuration
  
  func configure(viewController: EditTaskViewController)
  {
    let router = EditTaskRouter()
    router.viewController = viewController
    
    let interactor = EditTaskInteractor()
    interactor.output = viewController
    
    viewController.output = interactor
    viewController.router = router
  }
}

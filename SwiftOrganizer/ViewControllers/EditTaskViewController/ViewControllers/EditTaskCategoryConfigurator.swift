//
//  EditTaskCategoryConfigurator.swift
//  SwiftOrganizer
//
//  Created by Sergey Krotkih on 6/20/16.
//  Copyright (c) 2016 Sergey Krotkih. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

extension EditTaskCategoryViewController: EditTaskCategoryPresenterOutput
{
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)
    {
    }
}

extension EditTaskCategoryPresenter: EditTaskCategoryInteractorOutput
{
}

class EditTaskCategoryConfigurator
{
    class var sharedInstance: EditTaskCategoryConfigurator {
        struct SingletonWrapper {
            static let sharedInstance = EditTaskCategoryConfigurator()
        }
        return SingletonWrapper.sharedInstance;
    }
    
    func configure(viewController: EditTaskCategoryViewController)
    {
        let presenter = EditTaskCategoryPresenter()
        presenter.output = viewController
        
        let interactor = EditTaskCategoryInteractor()
        interactor.input = viewController.input
        interactor.output = presenter
        
        viewController.output = interactor
    }
}

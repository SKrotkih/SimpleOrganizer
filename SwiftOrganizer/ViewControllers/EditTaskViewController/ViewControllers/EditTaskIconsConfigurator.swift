//
//  EditTaskIconsConfigurator.swift
//  SwiftOrganizer
//
//  Created by Sergey Krotkih on 6/20/16.
//  Copyright (c) 2016 Sergey Krotkih. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension EditTaskIconsViewController: EditTaskIconsPresenterOutput
{
  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)
  {
  }
}

extension EditTaskIconsPresenter: EditTaskIconsInteractorOutput
{
}

class EditTaskIconsConfigurator
{
  class var sharedInstance: EditTaskIconsConfigurator
  {
    struct Static {
      static var instance: EditTaskIconsConfigurator?
      static var token: dispatch_once_t = 0
    }
    
    dispatch_once(&Static.token) {
      Static.instance = EditTaskIconsConfigurator()
    }
    
    return Static.instance!
  }
  
  // MARK: Configuration
  
  func configure(viewController: EditTaskIconsViewController)
  {
    let presenter = EditTaskIconsPresenter()
    presenter.output = viewController
    
    let interactor = EditTaskIconsInteractor()
    interactor.input = viewController.input
    interactor.output = presenter
    
    viewController.output = interactor
  }
}

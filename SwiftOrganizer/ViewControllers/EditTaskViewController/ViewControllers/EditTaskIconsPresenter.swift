//
//  EditTaskIconsPresenter.swift
//  SwiftOrganizer
//
//  Created by Sergey Krotkih on 6/20/16.
//  Copyright (c) 2016 Sergey Krotkih. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol EditTaskIconsPresenterInput
{
    func generateViewModel()
}

protocol EditTaskIconsPresenterOutput: class
{
    func redrawView(viewModel: EditTaskIconsViewModel)
}

class EditTaskIconsPresenter: EditTaskIconsPresenterInput
{
    weak var output: EditTaskIconsPresenterOutput!
    var responce: EditTaskIconsResponse!
    var taskIcons: TaskIcons!
    
    func presentResponce(response: EditTaskIconsResponse) {
        self.responce = response
    }
    
    func presentTaskIcons(taskIcons: TaskIcons) {
        self.taskIcons = taskIcons
    }
    
    func generateViewModel(){
        var dataSource: [Dictionary<String, AnyObject>] = []
        let icons = self.responce.icons
        let taskIcons = self.taskIcons.icons
        for ico: TaskIco in icons {
            let icoId: String = ico.recordid;
            let icoImageName: String = ico.imageName
            var checkBoxImageName: String = "uncheck_box"
            if let _ = taskIcons.indexOf(icoId) {
                checkBoxImageName =  "check_box"
            }
            dataSource.append(["imagename": icoImageName, "checkboximagename": checkBoxImageName])
        }
        let viewModel = EditTaskIconsViewModel(viewDataSource: dataSource)
        output.redrawView(viewModel)
    }
    
}
